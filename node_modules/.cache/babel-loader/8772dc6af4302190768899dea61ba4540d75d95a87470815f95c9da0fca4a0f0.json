{"ast":null,"code":"var _jsxFileName = \"/Users/chiarafais/Desktop/u3-w1-venerdi/src/components/GalleryOne.jsx\";\nimport { Component } from \"react\";\nimport { Row, Col, Spinner } from \"react-bootstrap\";\nimport Image from \"react-bootstrap/Image\";\nimport React from \"react\";\nimport Slider from \"react-slick\";\nimport netflixLogo from \"../assets/netflix.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass GalleryOne extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      settings: {\n        dots: true,\n        infinite: false,\n        speed: 500,\n        slidesToShow: 6,\n        slidesToScroll: 2,\n        initialSlide: 0,\n        responsive: [{\n          breakpoint: 1024,\n          settings: {\n            slidesToShow: 3,\n            slidesToScroll: 3,\n            infinite: true,\n            dots: true\n          }\n        }, {\n          breakpoint: 600,\n          settings: {\n            slidesToShow: 2,\n            slidesToScroll: 2,\n            initialSlide: 2\n          }\n        }, {\n          breakpoint: 480,\n          settings: {\n            slidesToShow: 1,\n            slidesToScroll: 1\n          }\n        }]\n      },\n      films: [],\n      isLoading: false\n    };\n    this.fetchFilms = props => {\n      this.setState({\n        isLoading: true\n      });\n      fetch(\"http://www.omdbapi.com/?apikey=266a7ae8&s=\" + this.props.filmName).then(response => {\n        if (response.ok) {\n          console.log(\"fetch conclusa\");\n          return response.json();\n        } else {\n          throw new Error(\"Errore nella richiesta delle prenotazioni al server\");\n        }\n      }).then(films => {\n        this.setState({\n          films: films.Search\n        });\n      }).catch(err => {\n        console.log(err);\n      }).finally(() => this.setState({\n        isLoading: false\n      }));\n    };\n  }\n  componentDidMount() {\n    this.fetchFilms();\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-dark pt-3 pb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-light px-4\",\n        children: [\" \", this.props.galleryTitle]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center loaderContainer\",\n        children: this.state.isLoading && /*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"border\",\n          variant: \"danger\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider-container\",\n        children: this.state.films.length > 0 && !this.state.isLoading && /*#__PURE__*/_jsxDEV(Slider, {\n          ...this.state.settings,\n          children: this.state.films.map(film => {\n            return /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                className: \"p-0 position-relative\",\n                children: [/*#__PURE__*/_jsxDEV(Image, {\n                  src: film.Poster,\n                  className: \"img-fluid imageFilmPoster\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"netflixLogo\",\n                  children: /*#__PURE__*/_jsxDEV(Image, {\n                    src: netflixLogo\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 21\n              }, this)\n            }, film.imdbID, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default GalleryOne;","map":{"version":3,"names":["Component","Row","Col","Spinner","Image","React","Slider","netflixLogo","jsxDEV","_jsxDEV","GalleryOne","constructor","args","state","settings","dots","infinite","speed","slidesToShow","slidesToScroll","initialSlide","responsive","breakpoint","films","isLoading","fetchFilms","props","setState","fetch","filmName","then","response","ok","console","log","json","Error","Search","catch","err","finally","componentDidMount","render","className","children","galleryTitle","fileName","_jsxFileName","lineNumber","columnNumber","animation","variant","length","map","film","src","Poster","imdbID"],"sources":["/Users/chiarafais/Desktop/u3-w1-venerdi/src/components/GalleryOne.jsx"],"sourcesContent":["import { Component } from \"react\";\nimport { Row, Col, Spinner } from \"react-bootstrap\";\nimport Image from \"react-bootstrap/Image\";\nimport React from \"react\";\nimport Slider from \"react-slick\";\nimport netflixLogo from \"../assets/netflix.svg\";\n\nclass GalleryOne extends Component {\n  state = {\n    settings: {\n      dots: true,\n      infinite: false,\n      speed: 500,\n      slidesToShow: 6,\n      slidesToScroll: 2,\n      initialSlide: 0,\n      responsive: [\n        {\n          breakpoint: 1024,\n          settings: {\n            slidesToShow: 3,\n            slidesToScroll: 3,\n            infinite: true,\n            dots: true,\n          },\n        },\n        {\n          breakpoint: 600,\n          settings: {\n            slidesToShow: 2,\n            slidesToScroll: 2,\n            initialSlide: 2,\n          },\n        },\n        {\n          breakpoint: 480,\n          settings: {\n            slidesToShow: 1,\n            slidesToScroll: 1,\n          },\n        },\n      ],\n    },\n    films: [],\n    isLoading: false,\n  };\n  fetchFilms = (props) => {\n    this.setState({ isLoading: true });\n    fetch(\"http://www.omdbapi.com/?apikey=266a7ae8&s=\" + this.props.filmName)\n      .then((response) => {\n        if (response.ok) {\n          console.log(\"fetch conclusa\");\n          return response.json();\n        } else {\n          throw new Error(\"Errore nella richiesta delle prenotazioni al server\");\n        }\n      })\n      .then((films) => {\n        this.setState({ films: films.Search });\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  componentDidMount() {\n    this.fetchFilms();\n  }\n\n  render() {\n    return (\n      <div className=\"bg-dark pt-3 pb-3\">\n        <h3 className=\"text-light px-4\"> {this.props.galleryTitle}</h3>\n        <div className=\"text-center loaderContainer\">\n          {this.state.isLoading && <Spinner animation=\"border\" variant=\"danger\" />}\n        </div>\n        <div className=\"slider-container\">\n          {this.state.films.length > 0 && !this.state.isLoading && (\n            <Slider {...this.state.settings}>\n              {this.state.films.map((film) => {\n                return (\n                  <Row key={film.imdbID}>\n                    <Col className=\"p-0 position-relative\">\n                      <Image src={film.Poster} className=\"img-fluid imageFilmPoster\" />\n                      <span className=\"netflixLogo\">\n                        <Image src={netflixLogo}></Image>\n                      </span>\n                    </Col>\n                  </Row>\n                );\n              })}\n            </Slider>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nexport default GalleryOne;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}