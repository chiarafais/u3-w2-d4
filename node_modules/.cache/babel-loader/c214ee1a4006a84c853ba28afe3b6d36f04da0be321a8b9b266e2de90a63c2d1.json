{"ast":null,"code":"var _jsxFileName = \"/Users/chiarafais/Desktop/EPICODE WEEK 10 REACT/u3-w2-d4/src/components/TvShow.jsx\",\n  _s = $RefreshSig$();\nimport { Row, Col, Spinner } from \"react-bootstrap\";\nimport Image from \"react-bootstrap/Image\";\nimport React, { useEffect, useState } from \"react\";\nimport Slider from \"react-slick\";\nimport netflixLogo from \"../assets/netflix.svg\";\nimport { NavLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TvShow = ({\n  filmName,\n  galleryTitle\n}) => {\n  _s();\n  console.log(filmName, galleryTitle);\n\n  // const { filmName, galleryTitle } = props;\n\n  const [films, setFilms] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const fetchFilms = () => {\n    setIsLoading(true);\n    fetch(\"http://www.omdbapi.com/?apikey=266a7ae8&s=\" + filmName).then(response => {\n      if (response.ok) {\n        console.log(\"fetch conclusa\");\n        return response.json();\n      } else {\n        throw new Error(\"Errore nella richiesta delle prenotazioni al server\");\n      }\n    }).then(films => {\n      setFilms(films.Search);\n      console.log(films);\n    }).catch(err => {\n      console.log(err);\n    }).finally(() => setIsLoading(false));\n  };\n  const settings = {\n    dots: true,\n    infinite: false,\n    speed: 500,\n    slidesToShow: 6,\n    slidesToScroll: 2,\n    initialSlide: 0,\n    responsive: [{\n      breakpoint: 1024,\n      settings: {\n        slidesToShow: 3,\n        slidesToScroll: 3,\n        infinite: true,\n        dots: true\n      }\n    }, {\n      breakpoint: 600,\n      settings: {\n        slidesToShow: 2,\n        slidesToScroll: 2,\n        initialSlide: 2\n      }\n    }, {\n      breakpoint: 480,\n      settings: {\n        slidesToShow: 1,\n        slidesToScroll: 1\n      }\n    }]\n  };\n  useEffect(() => {\n    fetchFilms();\n  }, [filmName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-dark pt-3 pb-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-light px-4\",\n      children: [\" \", galleryTitle]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center loaderContainer\",\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        variant: \"danger\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider-container\",\n      children: films.length > 0 && !isLoading && /*#__PURE__*/_jsxDEV(Slider, {\n        ...settings,\n        children: films.map(film => {\n          return /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              className: \"p-0 position-relative\",\n              children: [/*#__PURE__*/_jsxDEV(Image, {\n                src: film.Poster,\n                className: \"img-fluid imageFilmPoster\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"netflixLogo\",\n                children: /*#__PURE__*/_jsxDEV(Image, {\n                  src: netflixLogo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n              className: \"btn btn-info w-100\",\n              to: `/tvShows/MovieDetail/${films.Title}`,\n              children: [\" \", \"Dettaglio\", \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 19\n            }, this)]\n          }, film.imdbID, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(TvShow, \"DVzbL2FqmPQvyn+EylAFxuNfD3I=\");\n_c = TvShow;\nexport default TvShow;\nvar _c;\n$RefreshReg$(_c, \"TvShow\");","map":{"version":3,"names":["Row","Col","Spinner","Image","React","useEffect","useState","Slider","netflixLogo","NavLink","jsxDEV","_jsxDEV","TvShow","filmName","galleryTitle","_s","console","log","films","setFilms","isLoading","setIsLoading","fetchFilms","fetch","then","response","ok","json","Error","Search","catch","err","finally","settings","dots","infinite","speed","slidesToShow","slidesToScroll","initialSlide","responsive","breakpoint","className","children","fileName","_jsxFileName","lineNumber","columnNumber","animation","variant","length","map","film","src","Poster","to","Title","imdbID","_c","$RefreshReg$"],"sources":["/Users/chiarafais/Desktop/EPICODE WEEK 10 REACT/u3-w2-d4/src/components/TvShow.jsx"],"sourcesContent":["import { Row, Col, Spinner } from \"react-bootstrap\";\nimport Image from \"react-bootstrap/Image\";\nimport React, { useEffect, useState } from \"react\";\nimport Slider from \"react-slick\";\nimport netflixLogo from \"../assets/netflix.svg\";\nimport { NavLink } from \"react-router-dom\";\n\nconst TvShow = ({ filmName, galleryTitle }) => {\n  console.log(filmName, galleryTitle);\n\n  // const { filmName, galleryTitle } = props;\n\n  const [films, setFilms] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const fetchFilms = () => {\n    setIsLoading(true);\n    fetch(\"http://www.omdbapi.com/?apikey=266a7ae8&s=\" + filmName)\n      .then((response) => {\n        if (response.ok) {\n          console.log(\"fetch conclusa\");\n          return response.json();\n        } else {\n          throw new Error(\"Errore nella richiesta delle prenotazioni al server\");\n        }\n      })\n      .then((films) => {\n        setFilms(films.Search);\n        console.log(films);\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => setIsLoading(false));\n  };\n\n  const settings = {\n    dots: true,\n    infinite: false,\n    speed: 500,\n    slidesToShow: 6,\n    slidesToScroll: 2,\n    initialSlide: 0,\n    responsive: [\n      {\n        breakpoint: 1024,\n        settings: {\n          slidesToShow: 3,\n          slidesToScroll: 3,\n          infinite: true,\n          dots: true,\n        },\n      },\n      {\n        breakpoint: 600,\n        settings: {\n          slidesToShow: 2,\n          slidesToScroll: 2,\n          initialSlide: 2,\n        },\n      },\n      {\n        breakpoint: 480,\n        settings: {\n          slidesToShow: 1,\n          slidesToScroll: 1,\n        },\n      },\n    ],\n  };\n  useEffect(() => {\n    fetchFilms();\n  }, [filmName]);\n  return (\n    <div className=\"bg-dark pt-3 pb-3\">\n      <h3 className=\"text-light px-4\"> {galleryTitle}</h3>\n\n      {isLoading && (\n        <div className=\"text-center loaderContainer\">\n          <Spinner animation=\"border\" variant=\"danger\" />\n        </div>\n      )}\n\n      <div className=\"slider-container\">\n        {films.length > 0 && !isLoading && (\n          <Slider {...settings}>\n            {films.map((film) => {\n              return (\n                <Row key={film.imdbID}>\n                  <Col className=\"p-0 position-relative\">\n                    <Image src={film.Poster} className=\"img-fluid imageFilmPoster\" />\n                    <span className=\"netflixLogo\">\n                      <Image src={netflixLogo}></Image>\n                    </span>\n                  </Col>\n                  <NavLink className=\"btn btn-info w-100\" to={`/tvShows/MovieDetail/${films.Title}`}>\n                    {\" \"}\n                    Dettaglio{\" \"}\n                  </NavLink>\n                </Row>\n              );\n            })}\n          </Slider>\n        )}\n      </div>\n    </div>\n  );\n};\nexport default TvShow;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}